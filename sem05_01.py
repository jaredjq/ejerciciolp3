# -*- coding: utf-8 -*-
"""Sem05-01.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1J2RE0c0fiBWJSmWtxrzhgs6K_p6YlbPi

# Semana 05
1. Colecciones de datos
2. Estructuras Decisivas y Estructura Repetitivas
3. Clases y objetos
4. Funciones

1. Colecciones de datos
"""

#1.1 Listas
# Es una coleccion de elementos que puede ser ordenada, modificada, etc..
# Se identifica por los corchetes
# Ejemplo:
aula = ['Huertas', 'Bravo', 'Bonifacio', 'Caballero']
print(aula)

aula

# Podemos extraer cada elemento por su posicion
print(aula[0])
print(aula[1])

#Puedo asignar un valor a una posicion de la lista
aula[1] = 'Fernandez'
aula[1]

#Mostramos como quedo la lista
aula

#para argegar un elemento utilizamos append, se agregan al final
aula.append("Mamani")
aula.append("Bonifacio")
aula

#Para eliminar elementos utilizamos remove[]
aula.remove("Huertas")
aula

#Si hubiera varios elementos de valores iguales se eimina la primera coincidencia
aula.remove("Bonifacio")
aula

#Para el tamaño utilizamos len()
len(aula)

#Para recorrer podemos utilizar una estructura repetitiva
for alumno in aula:
  print(alumno)

#Para invertir la lista utilizamos reverse()
#invertir NO significa ordenar en forma descendente sin invertir la lista
aula.reverse()
aula

#Para ordenar una lista utilizamos sort()
aula.sort()
aula

#1.2 Tuplas
#Es una coleccion de elementos ordenada (Ordenado significa que tiene un indice, y no se puede agregar ni eliminar)
tupla_aula = ('Huerta', 'Bonifacio', 'Caballero', 'Fernandez')
tupla_aula

#1.3 Conjuntos
#Es una coleccion de elementos que no esta ordenada (Significa que no tiene indice)
conjunto_aula = {'Huerta', 'Bravo','Bonifacio', 'Caballero'}
conjunto_aula

#Para recorrer podemos utilizar una estructura repetitiva
for alumno in conjunto_aula:
  print(alumno)

#Observacion: No se puede acceder por posicion pues no considera indexacion
#Por ejemplo
#conjunto_aula[2]

#Para la cantidad de elementos utilizamos len()
len(conjunto_aula)

#Para agregar utilizamos la funcion add()
conjunto_aula.add("Paye")
conjunto_aula

#Para eliminar elementos utilizamos la funcion remove()
conjunto_aula.remove("Bravo")
conjunto_aula

#1.4 Diccionarios
#Es una coleccion de elementos, que estan indexados,
#no estan ordenados y se pueden modificar
#Son ecritos entre llaves y estan formados por pares de elementos INDICE:VALOR
diccionario_aula = {2:'Huertas', '1':'Bravo', 'dos':'Bonifacio', '3':'Caballero', '0':'Paye'}
diccionario_aula

#Del Diccionario diccionario_aula se selecciona un valor
diccionario_aula['0']

diccionario_aula[2]

diccionario_aula['1']

diccionario_aula['dos']

#Para añadir un par de elementos al diccionario hacemos:
diccionario_aula[20] = "Velez"
diccionario_aula

#Para eliminar un valor se utiliza pop()
#Por ejemplo, eliminar el elemento de índice dos.ejemplo: Para eliminar a Huertas
diccionario_aula.pop(2)
diccionario_aula

#Para obtener el índice y el valor de cada elemento utilizamos items()
  for indice, valor in diccionario_aula.items():
    print(indice, valor)

#1.5. Ejercicio
#Dado una lista de alumnos
#Diseñar un código que me muestr si el apellido de un estudiante (Ingresado por el teclado )
#forma parte de la lista

alumnos = ['AMES', 'ARTEAGA' , 'BARRIOS' , 'BONIFACIO', 'BRAVO', 'CABALLERO' , 'CAÑAZACA', 'FERNANDEZ' , 'FLORES' , 'GARCIA' , 'HERRERA' , 'HUERTA' , 'HUERTAS', 'JIMENEZ' , 'MAMANI' , 'MANCILLA', 'PABLO' , 'PAYE' , 'PEÑA' , 'PIZANGO', 'RAMOS', 'SANCHEZ', 'SEVILLANO', 'TINOCO', 'TORRES' , 'VALDIVIESO', 'VELEZ' , 'VILLANUEVA' , 'ZUÑIGA']
nombre = input("Escribe el nombre del alumno ")

if nombre in alumnos:
  print("El alumno si se encuentra en la lista")
else:
  print("El alumno no se encuentra en la lista")

